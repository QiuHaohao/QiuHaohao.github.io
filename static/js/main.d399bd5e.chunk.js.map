{"version":3,"sources":["components/commons/Logo/assets/logo.png","api/api.js","hooks/userHook.js","hooks/sessionHook.js","components/MainView/Header/UserStatus/UserStatusSignedIn.js","components/MainView/Header/UserStatus/UserStatusNotSignedIn.js","components/MainView/Header/UserStatus/UserStatus.js","components/commons/AbstractLinkPathMenu/AbstractLinkPathMenu.js","components/MainView/Header/Header.js","components/commons/ConditionalRedirectRoute/ConditionalRedirectRoute.js","components/commons/AbstractSelect/AbstractSelect.js","components/pages/PageSession/PageSessionNew/LabSelector/LabSelector.js","components/pages/PageSession/PageSessionNew/PageSessionNew.js","utils.js","components/commons/Statistic/Statistic.js","components/pages/PageSession/PageSessionOngoing/SessionDuration/SessionDuration.js","components/pages/PageSession/PageSessionOngoing/ImageCapturer/ImageCapturer.js","components/commons/AttendanceStatusTag/AttendanceStatusTag.js","components/pages/PageSession/PageSessionOngoing/AttendanceList/AttendanceList.js","components/pages/PageSession/PageSessionOngoing/PageSessionOngoing.js","components/pages/PageSession/PageSession.js","components/pages/PageLabs/PageLabs.js","components/commons/Logo/Logo.js","components/pages/PageSignIn/SignInForm/SignInForm.js","components/pages/PageSignIn/PageSignIn.js","components/MainView/Content/Content.js","components/MainView/MainView.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","config","require","postBase64Image","sid","base64Image","axios","post","urlBase","pathImage","image","then","res","data","map","item","mid","student","status","getToken","username","password","pathAuthToken","getStudentsByLid","lid","get","pathStudents","s","matric_num","name","email","verifyToken","token","pathAuthVerify","startSession","pathSession","lab","userContext","createContext","useUser","useContext","useProvideUser","useState","isSignedIn","setIsSignedIn","userName","setUserName","tid","setTid","labs","setLabs","handleSuccessfulSignIn","user","id","defaults","headers","common","Authorization","sessionStorage","setItem","useEffect","tokenInSessionStorage","getItem","api","verify","signIn","message","warning","signOut","removeItem","ProvideUser","children","Provider","value","getDisplayNameFromLab","course","group","sessionContext","useSession","useProvideSession","isOnGoing","setIsOnGoing","setSid","setLab","startTime","setStartTime","students","setStudents","updateStudentStatus","statuses","newStudents","forEach","studentList","index","_","findIndex","slice","changeStudentStatus","isEqual","labObject","resStartSession","resStudents","Date","now","handleSuccessfulSessionStart","error","endSession","postImage","ProvideSession","confirm","Modal","UserStatusSignedIn","session","logout","className","onClick","title","okText","cancelText","onOk","withRouter","UserStatus","props","location","items","selectedKeys","filter","keys","key","pathname","length","path","substr","String","theme","mode","style","lineHeight","Item","to","displayName","ConditionalRedirectRoute","Component","component","when","rest","render","Option","Select","AbstractSelect","onChange","v","options","option","SessionSelector","labSelected","setLabSelected","type","disabled","PageSessionNew","secondsToHHMMSS","milliSecs","milliSecsDate","newDateByMilliSeconds","toTimeString","durationUntilNowMilliSecondsToHHMMSS","start","end","timeDifferenceMilliSecondsToHHMMSS","makeGetterWithDefault","object","defaultValue","Statistic","SessionDuration","timeElasped","setTimeElasped","intervalHandle","setInterval","clearInterval","videoConstraints","width","height","facingMode","ImageCapturer","webcamRef","React","useRef","current","getScreenshot","onPostImage","useMemo","audio","ref","screenshotFormat","getStatusTextMap","A","L","AB","MC","getStatusAbbrMap","getColorMap","AttendanceStatusTag","text","abbreviate","color","order","AttendanceList","sortedStudents","sortBy","dataSource","renderItem","Meta","PageSessionOngoing","Fragment","match","exect","PageLabs","Logo","src","logo","alt","WrappedNormalLoginForm","Form","create","getFieldDecorator","form","onSubmit","e","preventDefault","validateFields","err","values","rules","required","prefix","placeholder","htmlType","PageSignIn","prevPathname","setPrevPathname","prev","cur","currentPathname","destroy","startsWith","success","renderContent","PageSession","exact","LayoutHeader","Layout","Header","LayoutContent","Content","MainView","App","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qHAAAA,EAAOC,QAAU,IAA0B,kC,wtBCErCC,EAASC,EAAQ,KA4CR,OACbC,gBA3CF,SAAyBC,EAAKC,GAC5B,OAAOC,IACJC,KAAKN,EAAOO,QAAUP,EAAOQ,UAAW,CACvCL,MACAM,MAAOL,IAERM,MAAK,SAAAC,GAAG,OACPA,EAAIC,KAAKC,KAAI,SAAAC,GACX,MAAO,CAAEC,IAAKD,EAAKE,QAASC,OAAQH,EAAKG,eAoC/CC,SAfF,SAAkBC,EAAUC,GAC1B,OAAOf,IAAMC,KAAN,UAAcN,EAAOO,QAAUP,EAAOqB,eAAiB,CAC5DF,WACAC,cAaFE,iBAhCF,SAA0BC,GACxB,OAAOlB,IACJmB,IADI,UACGxB,EAAOO,QAAUP,EAAOyB,aAD3B,gBAC+CF,IACnDb,MAAK,SAAAC,GAAG,OACPA,EAAIC,KAAKC,KAAI,SAAAa,GACX,MAAO,CAAEX,IAAKW,EAAEC,WAAYC,KAAMF,EAAEE,KAAMC,MAAOH,EAAEG,cA4BzDC,YAVF,SAAqBC,GACnB,OAAO1B,IAAMC,KAAN,UAAcN,EAAOO,QAAUP,EAAOgC,gBAAkB,CAC7DD,WASFE,aAxBF,SAAsBV,GACpB,OAAOlB,IAAMC,KAAKN,EAAOO,QAAUP,EAAOkC,YAAa,CACrDC,IAAKZ,MCrBHa,EAAcC,0BAEPC,EAAU,WACrB,OAAOC,qBAAWH,IAGpB,SAASI,IAAkB,IAAD,EACYC,oBAAS,GADrB,mBACjBC,EADiB,KACLC,EADK,OAEQF,mBAAS,MAFjB,mBAEjBG,EAFiB,KAEPC,EAFO,OAGFJ,mBAAS,MAHP,mBAGjBK,EAHiB,KAGZC,EAHY,OAIAN,mBAAS,MAJT,mBAIjBO,EAJiB,KAIXC,EAJW,KAMlBC,EAAyB,SAAAvC,GAC7BkC,EAAYlC,EAAIC,KAAKuC,KAAKhC,UAC1B4B,EAAOpC,EAAIC,KAAKuC,KAAKC,IACrBH,EAAQtC,EAAIC,KAAKuC,KAAKH,MACtB3C,IAAMgD,SAASC,QAAQC,OAAOC,cAA9B,cAAqD7C,EAAIC,KAAKmB,OAC9D0B,eAAeC,QAAQ,WAAY/C,EAAIC,KAAKmB,OAC5CY,GAAc,IAiChB,OATAgB,qBAAU,WACR,IAAKjB,EAAY,CACf,IAAMkB,EAAwBH,eAAeI,QAAQ,YACvB,OAA1BD,GAxBO,SAAC,GAAe,IAAb7B,EAAY,EAAZA,MACT+B,EAAIhC,YAAYC,GAAOrB,KAAKwC,GAAwB,eAwBvDa,CAAO,CAAEhC,MAAO6B,QAKf,CACLhB,WACAE,MACAE,OACAN,aACAsB,OA/Ba,SAAC,GAA4B,IAA1B7C,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC1B,OAAO0C,EAAI5C,SAASC,EAAUC,GAAUV,KAAKwC,GAAwB,WACnEe,IAAQC,QAAQ,oCA8BlBC,QA1Bc,WACdxB,GAAc,GACdE,EAAY,MACZE,EAAO,MAGPE,EAAQ,aACD5C,IAAMgD,SAASC,QAAQC,OAAOC,cACrCC,eAAeW,WAAW,cAsBvB,SAASC,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SACtBnB,EAAOX,IACb,OAAO,kBAACJ,EAAYmC,SAAb,CAAsBC,MAAOrB,GAAOmB,GAKtC,SAASG,EAAsBtC,GACpC,MAAM,GAAN,OAAUA,EAAIuC,OAAd,cAA0BvC,EAAIwC,O,+lBCrEhC,IAAMC,EAAiBvC,0BAEVwC,EAAa,WACxB,OAAOtC,qBAAWqC,IAGpB,SAASE,IAAqB,IAAD,EACOrC,oBAAS,GADhB,mBACpBsC,EADoB,KACTC,EADS,OAELvC,mBAAS,MAFJ,mBAEpBtC,EAFoB,KAEf8E,EAFe,OAGLxC,mBAAS,MAHJ,mBAGpBN,EAHoB,KAGf+C,EAHe,OAIOzC,mBAAS,MAJhB,mBAIpB0C,EAJoB,KAITC,EAJS,OAKK3C,mBAAS,MALd,mBAKpB4C,EALoB,KAKVC,EALU,KAgBrBC,EAAsB,SAAAC,GAC1B,IAAIC,EAAcJ,EAClBG,EAASE,SAAQ,SAAAzE,GACfwE,EAZwB,SAAC,EAAiBE,GAAiB,IAAhC5E,EAA+B,EAA/BA,IAAKE,EAA0B,EAA1BA,OAC5B2E,EAAQC,IAAEC,UAAUH,EAAa,CAAE5E,QACzC,MAAM,GAAN,mBACK4E,EAAYI,MAAM,EAAGH,IAD1B,MAEOP,EAASO,GAFhB,CAEwB3E,YAFxB,YAGK0E,EAAYI,MAAMH,EAAQ,KAOfI,CAAoB/E,EAAQwE,MAEvCI,IAAEI,QAAQR,EAAaJ,IAC1BC,EAAYG,IA8ChB,OAJA9B,qBAAU,eAIH,CACLoB,YACA5E,MACAgC,MACAgD,YACAE,WACApD,aAnCmB,SAAAiE,GACnB,OAAOpC,EAAI7B,aAAaiE,EAAU3E,KAAKb,MACrC,SAAAyF,GACErC,EAAIxC,iBAAiB4E,EAAU3E,KAAKb,MAAK,SAAA0F,IAhBV,SACnCF,EACAC,EACAC,GAGAnB,EAAOkB,EAAgBvF,KAAKT,KAC5B+E,EAAOgB,GACPd,EAAaiB,KAAKC,OAClBhB,EAAYc,GACZpB,GAAa,GAOPuB,CAA6BL,EAAWC,EAAiBC,SAG7D,WACEnC,IAAQuC,MAAM,gCA4BlBC,WAvBiB,WACjBzB,GAAa,GACbC,EAAO,MACPC,EAAO,MACPE,EAAa,MACbE,EAAY,OAmBZoB,UAhBgB,SAAAtG,GAChB,OAAO0D,EAAI5D,gBAAgBC,EAAKC,GAAaM,KAAK6E,KAmB/C,SAASoB,EAAT,GAAuC,IAAbrC,EAAY,EAAZA,SACzBnB,EAAO2B,IACb,OACE,kBAACF,EAAeL,SAAhB,CAAyBC,MAAOrB,GAAOmB,G,8CC3FnCsC,EAAYC,IAAZD,QA0BOE,MAxBf,WACE,IAAMC,EAAUlC,IACV1B,EAAOb,IASP0E,EACJ,yBAAKC,UAAU,WAAWC,QATR,WAClBN,EAAQ,CACNO,MAAO,2BACPC,OAAQ,MACRC,WAAY,KACZC,KAAMnE,EAAKgB,YAIb,aAIF,OACE,yBAAK8C,UAAU,qCAAf,cACU9D,EAAKP,SADf,MAEGmE,EAAQhC,UAAY,KAAOiC,IChBnBO,mBARf,WACE,OACE,yBAAKN,UAAU,yCAAf,6BCWWO,MARf,WAEE,OADalF,IACJI,WACA,kBAAC,EAAD,MAEF,kBAAC,EAAD,O,SCsBM6E,mBA7Bf,SAA8BE,GAAQ,IAC5BC,EAAoBD,EAApBC,SAAUC,EAAUF,EAAVE,MACZC,EAAe/B,IAAEgC,OAAF,YACfF,EAAMG,SACV,SAAAC,GAAG,OACDL,EAASM,SAASC,QAAUN,EAAMI,GAAKG,KAAKD,QAC5CN,EAAMI,GAAKG,OAASR,EAASM,SAASG,OAAO,EAAGR,EAAMI,GAAKG,KAAKD,WAClEpH,IAAIuH,QACN,OACE,kBAAC,IAAD,CACEC,MAAM,OACNC,KAAK,aACLC,MAAO,CAAEC,WAAY,QACrBZ,aAAcA,GAEbD,EAAM9G,KAAI,SAACC,EAAM8E,GAAP,OACT,kBAAC,IAAK6C,KAAN,CAAWV,IAAKK,OAAOxC,IACrB,kBAAC,IAAD,CAAM8C,GAAI5H,EAAKoH,MAAOpH,EAAK6H,qBCEtBpB,mBAjBf,WACE,IAKMpE,EAAOb,IACb,OACE,yBAAK2E,UAAU,UACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEU,MAAOxE,EAAKT,WAVQ,CACxB,CAAEiG,YAAa,UAAWT,KAAM,YAChC,CAAES,YAAa,aAAcT,KAAM,UAER,CAAC,CAAES,YAAa,UAAWT,KAAM,kB,SCSjDU,MAjBf,YAAgF,IAAjCC,EAAgC,EAA3CC,UAAsBC,EAAqB,EAArBA,KAAML,EAAe,EAAfA,GAAOM,EAAQ,yCAC7E,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAxB,GAAK,OACF,IAATsB,EAAgB,kBAAC,IAAD,CAAUL,GAAIA,IAAS,kBAACG,EAAcpB,Q,gBCLtDyB,EAAWC,IAAXD,OAoBOE,MAlBf,SAAwB3B,GACtB,OACE,kBAAC,IAAD,CAAQR,UAAWQ,EAAMR,UAAWoC,SAAU,SAAAC,GAAC,OAAI7B,EAAM4B,SAASC,KAC/D7B,EAAM8B,QAAQ1I,KAAI,SAAC2I,EAAQ5D,GAAT,OACjB,kBAACsD,EAAD,CAAQnB,IAAKnC,EAAOpB,MAAOgF,EAAOhF,OAC/BgF,EAAO5H,W,OCiCH6H,MAjCf,SAAyBhC,GACvB,IAAMV,EAAUlC,IADc,EAEQpC,mBAAS,MAFjB,mBAEvBiH,EAFuB,KAEVC,EAFU,KAGxBJ,EAAU9B,EAAMzE,KAAKnC,KAAI,SAAAsB,GAC7B,MAAO,CAAEqC,MAAOrC,EAAIZ,IAAKK,KAAM6C,EAAsBtC,OAEvD,OACE,yBAAK8E,UAAU,gBACb,yBAAKA,UAAU,qBAAf,cACA,kBAAC,EAAD,CACEA,UAAU,wBACVsC,QAASA,EACTF,SAAUM,IAEZ,kBAAC,IAAD,CACEC,KAAK,UACL1C,QAAS,WACPH,EAAQ9E,aACNwF,EAAMzE,KAAK6E,QAAO,SAAA1F,GAAG,OAAIA,EAAIZ,MAAQmI,KAAa,KAGtDG,SAA0B,OAAhBH,GAPZ,mB,OCRSI,MAVf,WACE,IAAM3G,EAAOb,IAEb,OACE,yBAAK2E,UAAU,oBACb,kBAAC,EAAD,CAAajE,KAAMG,EAAKH,SCL9B,SAAS+G,EAAgBC,GACvB,IAAMC,EATR,SAA+BD,GAC7B,OAAO,IAAI3D,KAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM2D,GAQ9BE,CAAsBF,GAE5C,OAD4BC,EALhBE,eAAehC,OAAO,EAAG,GAahC,SAASiC,EAAqCC,GACnD,OALK,SAA4CA,EAAOC,GACxD,OAAOP,EAAgBO,EAAMD,GAItBE,CAAmCF,EAAOhE,KAAKC,OAGjD,SAASkE,EAAsBC,EAAQC,GAC5C,OAAO,SAAA3C,GAAG,OAAKA,KAAO0C,EAASA,EAAO1C,GAAO2C,G,OCJhCC,MAdf,SAAmBlD,GACjB,OACE,yBAAKR,UAAU,aACb,yBAAKA,UAAU,mBAAmBQ,EAAMN,OACxC,yBAAKF,UAAU,mBAAmBQ,EAAMjD,S,OCe/BoG,MAff,WACE,IAAM7D,EAAUlC,IADS,EAEapC,mBACpC2H,EAAqCrD,EAAQ5B,YAHtB,mBAElB0F,EAFkB,KAELC,EAFK,KAYzB,OANAnH,qBAAU,WACR,IAAMoH,EAAiBC,aAAY,WACjCF,EAAeV,EAAqCrD,EAAQ5B,cAC3D,KACH,OAAO,kBAAM8F,cAAcF,OAEtB,kBAAC,EAAD,CAAW5D,MAAM,WAAW3C,MAAOqG,K,kBCjBtCK,GAAmB,CACvBC,MAAO,KACPC,OAAQ,IACRC,WAAY,QAgCCC,OA7Bf,SAAuB7D,GACrB,IAAM8D,EAAYC,IAAMC,OAAO,MAU/B,OARA9H,qBAAU,WACR,IAAMoH,EAAiBC,aAAY,WACjC,IAAM5K,EAAcmL,EAAUG,QAAQC,gBACtClE,EAAMmE,YAAYxL,KACjB,KACH,OAAO,kBAAM6K,cAAcF,OAGtBc,mBACL,kBACE,kBAAC,IAAD,CACE5E,UAAU,iBACV6E,OAAO,EACPC,IAAKR,EACLS,iBAAiB,aACjBd,iBAAkBA,OAGtB,K,oBCHEe,GAAmBzB,EArBH,CACpB0B,EAAG,UACHC,EAAG,OACHC,GAAI,0BACJC,GAAI,yBAiBwD,aAExDC,GAAmB9B,EAhBH,CACpB0B,EAAG,IACHC,EAAG,IACHC,GAAI,KACJC,GAAI,MAYwD,KAExDE,GAAc/B,EAXH,CACf0B,EAAG,QACHC,EAAG,OACHC,GAAI,MACJC,GAAI,QAO8C,QAerCG,OAbf,SAA6B/E,GAC3B,IAAMgF,EAAOhF,EAAMiF,WACfJ,GAAiB7E,EAAMxG,QACvBgL,GAAiBxE,EAAMxG,QACrB0L,EAAQJ,GAAY9E,EAAMxG,QAChC,OAAO,kBAAC,KAAD,CAAK0L,MAAOA,GAAQF,IC/BvBG,GAAQ,CACZV,EAAG,EACHC,EAAG,EACHC,GAAI,EACJC,GAAI,GA0BSQ,OAvBf,SAAwBpF,GACtB,IAAMqF,EAAiBjH,IAAEkH,OAAOtF,EAAMpC,SAAU,CAC9C,SAAArE,GAAO,OAAI4L,GAAM5L,EAAQC,SACzB,SAEF,OACE,kBAAC,KAAD,CACEgG,UAAU,eACV+F,WAAYF,EACZG,WAAY,SAAAjM,GAAO,OACjB,kBAAC,KAAKyH,KAAN,CAAWxB,UAAU,oBAAoBc,IAAK/G,EAAQD,KACpD,kBAAC,KAAK0H,KAAKyE,KAAX,CAAgB/F,MAAOnG,EAAQY,OAC/B,kBAAC,GAAD,CAAqB8K,YAAU,EAACzL,OAAQD,EAAQC,cCXlD2F,I,OAAYC,IAAZD,SAwCOuG,OAtCf,WACE,IAAMpG,EAAUlC,IAEhB,OAAOgH,mBAAQ,WASb,OACE,yBAAK5E,UAAU,wBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,uBACb,kBAAC,EAAD,CACEE,MAAM,YACN3C,MAAOC,EAAsBsC,EAAQ5E,OAEvC,kBAAC,IAAD,CAAQyH,KAAK,SAAS1C,QAhBV,WAClBN,GAAQ,CACNO,MAAO,mCACPC,OAAQ,MACRC,WAAY,KACZC,KAAMP,EAAQN,eAWV,gBAIF,kBAAC,GAAD,CAAgBpB,SAAU0B,EAAQ1B,YAEpC,yBAAK4B,UAAU,gBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,sBAAf,gBACA,kBAAC,EAAD,OAEF,kBAAC,GAAD,CAAe2E,YAAa7E,EAAQL,gBAIzC,CAACK,EAAQ5E,IAAK4E,EAAQ1B,SAAU0B,EAAQL,UAAWK,EAAQN,cCHjDc,oBAtCf,SAAqBE,GACnB,IAAMV,EAAUlC,IAChB,OAAOgH,mBACL,kBACE,kBAAC,IAAMuB,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CACElF,KAAI,UAAKT,EAAM4F,MAAMnF,KAAjB,QACJa,KAAMhC,EAAQhC,UACd2D,GAAE,UAAKjB,EAAM4F,MAAMnF,KAAjB,YACFY,UAAWgB,IAEb,kBAAC,EAAD,CACE5B,KAAI,UAAKT,EAAM4F,MAAMnF,KAAjB,YACJa,MAAOhC,EAAQhC,UACf2D,GAAE,UAAKjB,EAAM4F,MAAMnF,KAAjB,QACFY,UAAWqE,KAEb,kBAAC,EAAD,CACEG,OAAK,EACLpF,KAAI,UAAKT,EAAM4F,MAAMnF,KAAjB,KACJa,KAAMhC,EAAQhC,UACd2D,GAAE,UAAKjB,EAAM4F,MAAMnF,KAAjB,YACFY,UAAWgB,QAKnB,CAAC/C,EAAQhC,UAAW0C,EAAM4F,MAAMnF,UClCrBqF,OAJf,WACE,OAAO,yBAAKtG,UAAU,aAAf,S,4BCUMuG,OARf,WACE,OACE,yBAAKvG,UAAU,QACb,yBAAKwG,IAAKC,KAAMC,IAAI,W,mCC2D1B,IAIeC,GAJgBC,KAAKC,OAAO,CAAElM,KAAM,gBAApBiM,EA3D/B,SAAoBpG,GAClB,IAAMtE,EAAOb,IAELyL,EAAsBtG,EAAMuG,KAA5BD,kBAWR,OACE,yBAAK9G,UAAU,wBACb,kBAAC,KAAD,CAAMgH,SAXW,SAAAC,GACnBA,EAAEC,iBACF1G,EAAMuG,KAAKI,gBAAe,SAACC,EAAKC,GACzBD,GACHlL,EAAKa,OAAOsK,OAOgBrH,UAAU,cACtC,kBAAC,KAAKwB,KAAN,KACGsF,EAAkB,WAAY,CAC7BQ,MAAO,CAAC,CAAEC,UAAU,EAAMvK,QAAS,iCADpC8J,CAGC,kBAAC,KAAD,CACEU,OAAQ,kBAAC,KAAD,CAAM7E,KAAK,OAAOrB,MAAO,CAAEoE,MAAO,qBAC1C+B,YAAY,eAIlB,kBAAC,KAAKjG,KAAN,KACGsF,EAAkB,WAAY,CAC7BQ,MAAO,CAAC,CAAEC,UAAU,EAAMvK,QAAS,iCADpC8J,CAGC,kBAAC,KAAD,CACEU,OAAQ,kBAAC,KAAD,CAAM7E,KAAK,OAAOrB,MAAO,CAAEoE,MAAO,qBAC1C/C,KAAK,WACL8E,YAAY,eAIlB,kBAAC,KAAKjG,KAAN,KACE,kBAAC,IAAD,CACEmB,KAAK,UACL+E,SAAS,SACT1H,UAAU,qBAHZ,gB,OC9BK2H,OATf,WACE,OACE,yBAAK3H,UAAU,eACb,kBAAC,GAAD,MACA,kBAAC,GAAD,QCqESM,oBApEf,SAAiBE,GACf,IAAMtE,EAAOb,IACPyE,EAAUlC,IAFM,EAIkBpC,mBAAS,MAJ3B,mBAIfoM,EAJe,KAIDC,EAJC,KAMtBnL,qBAAU,WACR,IAC8BoL,EAAMC,EAD9BC,EAAkBxH,EAAMC,SAASM,SAoBnC6G,IAAiBI,IAnBeD,EAoBCC,EAlBtB,sBAFeF,EAoBPF,IAlBc9H,EAAQhC,YACzCd,IAAQiL,UACRjL,IAAQC,QACN,2DAKF8K,EAAIG,WAAW,aACN,OAATJ,IACCA,EAAKI,WAAW,aACjBpI,EAAQhC,YAERd,IAAQiL,UACRjL,IAAQmL,QAAQ,uBAKlBN,EAAgBG,MAEjB,CAACxH,EAAMC,SAASM,SAAU6G,EAAc9H,EAAQhC,YAEnD,IAAMsK,EAAgB,kBACpB,kBAAC,IAAMjC,SAAP,KACE,kBAAC,IAAD,CAAOlF,KAAK,WAAWY,UAAWwG,KAClC,kBAAC,IAAD,CAAOpH,KAAK,QAAQY,UAAWyE,KAC/B,kBAAC,IAAD,CAAOgC,OAAK,EAACrH,KAAK,IAAIY,UAAWwG,OAGrC,OAAOzD,mBACL,kBACE,yBAAK5E,UAAU,WACb,kBAAC,EAAD,CACEsI,OAAK,EACLrH,KAAK,UACLa,KAAM5F,EAAKT,WACXgG,GAAG,WACHI,UAAW8F,KAEb,kBAAC,EAAD,CACE1G,KAAK,IACLa,MAAO5F,EAAKT,WACZgG,GAAG,UACHI,UAAWuG,OAIjB,CAAClM,EAAKT,gBC/DM8M,I,OAAyCC,IAAjDC,QAA+BC,GAAkBF,IAA3BG,QAefC,OAbf,WACE,OACE,kBAAC,IAAD,CAAQ5I,UAAU,cAChB,kBAACuI,GAAD,CAAcvI,UAAU,qBACtB,kBAAC,EAAD,OAEF,kBAAC0I,GAAD,CAAe1I,UAAU,sBACvB,kBAAC,GAAD,SCQO6I,OAdf,WACE,OACE,kBAACzL,EAAD,KACE,kBAACsC,EAAD,KACE,kBAAC,IAAD,KACE,yBAAKM,UAAU,OACb,kBAAC,GAAD,WCLQ8I,QACW,cAA7BC,OAAOtI,SAASuI,UAEe,UAA7BD,OAAOtI,SAASuI,UAEhBD,OAAOtI,SAASuI,SAAS5C,MACvB,2DCZN6C,IAASjH,OAAO,kBAAC,GAAD,MAASkH,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7P,MAAK,SAAA8P,GACjCA,EAAaC,kB","file":"static/js/main.d399bd5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.bc04722f.png\";","import axios from 'axios';\n\nconst config = require('./config.json');\n\nfunction postBase64Image(sid, base64Image) {\n  return axios\n    .post(config.urlBase + config.pathImage, {\n      sid,\n      image: base64Image\n    })\n    .then(res =>\n      res.data.map(item => {\n        return { mid: item.student, status: item.status };\n      })\n    );\n}\n\nfunction getStudentsByLid(lid) {\n  return axios\n    .get(`${config.urlBase + config.pathStudents}?lab=${lid}`)\n    .then(res =>\n      res.data.map(s => {\n        return { mid: s.matric_num, name: s.name, email: s.email };\n      })\n    );\n}\n\nfunction startSession(lid) {\n  return axios.post(config.urlBase + config.pathSession, {\n    lab: lid\n  });\n}\n\nfunction getToken(username, password) {\n  return axios.post(`${config.urlBase + config.pathAuthToken}`, {\n    username,\n    password\n  });\n}\n\nfunction verifyToken(token) {\n  return axios.post(`${config.urlBase + config.pathAuthVerify}`, {\n    token\n  });\n}\n\nexport default {\n  postBase64Image,\n  getToken,\n  getStudentsByLid,\n  verifyToken,\n  startSession\n};\n","import PropTypes from 'prop-types';\nimport React, { useState, useContext, createContext, useEffect } from 'react';\nimport axios from 'axios';\n\nimport { message } from 'antd';\n\nimport api from '../api';\n\nconst userContext = createContext();\n\nexport const useUser = () => {\n  return useContext(userContext);\n};\n\nfunction useProvideUser() {\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [userName, setUserName] = useState(null);\n  const [tid, setTid] = useState(null);\n  const [labs, setLabs] = useState(null);\n\n  const handleSuccessfulSignIn = res => {\n    setUserName(res.data.user.username);\n    setTid(res.data.user.id);\n    setLabs(res.data.user.labs);\n    axios.defaults.headers.common.Authorization = `JWT ${res.data.token}`;\n    sessionStorage.setItem('jwtToken', res.data.token);\n    setIsSignedIn(true);\n  };\n\n  const verify = ({ token }) => {\n    return api.verifyToken(token).then(handleSuccessfulSignIn, () => {});\n  };\n\n  const signIn = ({ username, password }) => {\n    return api.getToken(username, password).then(handleSuccessfulSignIn, () => {\n      message.warning('Wrong Credential, try again!');\n    });\n  };\n\n  const signOut = () => {\n    setIsSignedIn(false);\n    setUserName(null);\n    setTid(null);\n    // lid\n    // displayName\n    setLabs(null);\n    delete axios.defaults.headers.common.Authorization;\n    sessionStorage.removeItem('jwtToken');\n  };\n\n  useEffect(() => {\n    if (!isSignedIn) {\n      const tokenInSessionStorage = sessionStorage.getItem('jwtToken');\n      if (tokenInSessionStorage !== null) {\n        verify({ token: tokenInSessionStorage });\n      }\n    }\n  });\n\n  return {\n    userName,\n    tid,\n    labs,\n    isSignedIn,\n    signIn,\n    signOut\n  };\n}\n\nexport function ProvideUser({ children }) {\n  const user = useProvideUser();\n  return <userContext.Provider value={user}>{children}</userContext.Provider>;\n}\n\n// GETTERS\n\nexport function getDisplayNameFromLab(lab) {\n  return `${lab.course} - ${lab.group}`;\n}\n\nProvideUser.propTypes = {\n  children: PropTypes.element.isRequired\n};\n","import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { useState, useContext, createContext, useEffect } from 'react';\n\nimport { message } from 'antd';\n\nimport api from '../api';\n\nconst sessionContext = createContext();\n\nexport const useSession = () => {\n  return useContext(sessionContext);\n};\n\nfunction useProvideSession() {\n  const [isOnGoing, setIsOnGoing] = useState(false);\n  const [sid, setSid] = useState(null);\n  const [lab, setLab] = useState(null);\n  const [startTime, setStartTime] = useState(null);\n  const [students, setStudents] = useState(null);\n\n  const changeStudentStatus = ({ mid, status }, studentList) => {\n    const index = _.findIndex(studentList, { mid });\n    return [\n      ...studentList.slice(0, index),\n      { ...students[index], status },\n      ...studentList.slice(index + 1)\n    ];\n  };\n\n  const updateStudentStatus = statuses => {\n    let newStudents = students;\n    statuses.forEach(status => {\n      newStudents = changeStudentStatus(status, newStudents);\n    });\n    if (!_.isEqual(newStudents, students)) {\n      setStudents(newStudents);\n    }\n  };\n\n  const handleSuccessfulSessionStart = (\n    labObject,\n    resStartSession,\n    resStudents\n  ) => {\n    // should store the session ID when starting session\n    setSid(resStartSession.data.sid);\n    setLab(labObject);\n    setStartTime(Date.now());\n    setStudents(resStudents);\n    setIsOnGoing(true);\n  };\n\n  const startSession = labObject => {\n    return api.startSession(labObject.lid).then(\n      resStartSession => {\n        api.getStudentsByLid(labObject.lid).then(resStudents => {\n          handleSuccessfulSessionStart(labObject, resStartSession, resStudents);\n        });\n      },\n      () => {\n        message.error('Session Failed to Start!');\n      }\n    );\n  };\n\n  const endSession = () => {\n    setIsOnGoing(false);\n    setSid(null);\n    setLab(null);\n    setStartTime(null);\n    setStudents(null);\n  };\n\n  const postImage = base64Image => {\n    return api.postBase64Image(sid, base64Image).then(updateStudentStatus);\n  };\n\n  useEffect(() => {\n    // load from local storage and resume session?\n  });\n\n  return {\n    isOnGoing,\n    sid,\n    lab,\n    startTime,\n    students,\n    startSession,\n    endSession,\n    postImage\n  };\n}\n\nexport function ProvideSession({ children }) {\n  const user = useProvideSession();\n  return (\n    <sessionContext.Provider value={user}>{children}</sessionContext.Provider>\n  );\n}\n\nProvideSession.propTypes = {\n  children: PropTypes.element.isRequired\n};\n","import React from 'react';\nimport { Modal } from 'antd';\n\nimport { useUser } from '../../../../hooks/userHook';\nimport { useSession } from '../../../../hooks/sessionHook';\n\nconst { confirm } = Modal;\n\nfunction UserStatusSignedIn() {\n  const session = useSession();\n  const user = useUser();\n  const showConfirm = () => {\n    confirm({\n      title: 'Do you Want to sign out?',\n      okText: 'Yes',\n      cancelText: 'No',\n      onOk: user.signOut\n    });\n  };\n  const logout = (\n    <div className=\"sign-out\" onClick={showConfirm}>\n      Sign Out.\n    </div>\n  );\n  return (\n    <div className=\"user-status user-status-signed-in\">\n      {`Hi, ${user.userName}! `}\n      {session.isOnGoing ? null : logout}\n    </div>\n  );\n}\n\nexport default UserStatusSignedIn;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction UserStatusNotSignedIn() {\n  return (\n    <div className=\"user-status user-status-not-signed-in\">\n      You are not signed in.\n    </div>\n  );\n}\n\nexport default withRouter(UserStatusNotSignedIn);\n","import React from 'react';\n\nimport './UserStatus.css';\n\nimport UserStatusSignedIn from './UserStatusSignedIn';\nimport UserStatusNotSignedIn from './UserStatusNotSignedIn';\nimport { useUser } from '../../../../hooks/userHook';\n\nfunction UserStatus() {\n  const user = useUser();\n  if (user.isSignedIn) {\n    return <UserStatusSignedIn />;\n  }\n  return <UserStatusNotSignedIn />;\n}\n\nexport default UserStatus;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport _ from 'lodash';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Menu } from 'antd';\n\nfunction AbstractLinkPathMenu(props) {\n  const { location, items } = props;\n  const selectedKeys = _.filter(\n    [...items.keys()],\n    key =>\n      location.pathname.length >= items[key].path.length &&\n      items[key].path === location.pathname.substr(0, items[key].path.length)\n  ).map(String);\n  return (\n    <Menu\n      theme=\"dark\"\n      mode=\"horizontal\"\n      style={{ lineHeight: '64px' }}\n      selectedKeys={selectedKeys}\n    >\n      {items.map((item, index) => (\n        <Menu.Item key={String(index)}>\n          <Link to={item.path}>{item.displayName}</Link>\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n}\n\nAbstractLinkPathMenu.propTypes = {\n  items: PropTypes.array.isRequired,\n  location: PropTypes.object.isRequired\n};\n\nexport default withRouter(AbstractLinkPathMenu);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './Header.css';\nimport UserStatus from './UserStatus';\nimport { useUser } from '../../../hooks/userHook';\n\nimport AbstractLinkPathMenu from '../../commons/AbstractLinkPathMenu';\n\nfunction Header() {\n  const menuItemsSignedIn = [\n    { displayName: 'Session', path: '/session' },\n    { displayName: 'Lab Groups', path: '/labs' }\n  ];\n  const menuItemsNotSignedIn = [{ displayName: 'Sign in', path: '/signin' }];\n  const user = useUser();\n  return (\n    <div className=\"header\">\n      <UserStatus />\n      <AbstractLinkPathMenu\n        items={user.isSignedIn ? menuItemsSignedIn : menuItemsNotSignedIn}\n      />\n    </div>\n  );\n}\n\nexport default withRouter(Header);\n","import PropTypes from 'prop-types';\n\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nfunction ConditionalRedirectRoute({ component: Component, when, to, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        when === true ? <Redirect to={to} /> : <Component {...props} />\n      }\n    />\n  );\n}\n\nConditionalRedirectRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n  when: PropTypes.bool.isRequired,\n  to: PropTypes.string.isRequired\n};\n\nexport default ConditionalRedirectRoute;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\nfunction AbstractSelect(props) {\n  return (\n    <Select className={props.className} onChange={v => props.onChange(v)}>\n      {props.options.map((option, index) => (\n        <Option key={index} value={option.value}>\n          {option.name}\n        </Option>\n      ))}\n    </Select>\n  );\n}\n\nAbstractSelect.propTypes = {\n  options: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\n\nexport default AbstractSelect;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\n\nimport { Button } from 'antd';\n\nimport { getDisplayNameFromLab } from '../../../../../hooks/userHook';\nimport { useSession } from '../../../../../hooks/sessionHook';\n\nimport AbstractSelect from '../../../../commons/AbstractSelect';\n\nimport './LabSelector.css';\n\nfunction SessionSelector(props) {\n  const session = useSession();\n  const [labSelected, setLabSelected] = useState(null);\n  const options = props.labs.map(lab => {\n    return { value: lab.lid, name: getDisplayNameFromLab(lab) };\n  });\n  return (\n    <div className=\"lab-selector\">\n      <div className=\"lab-selector-text\">Which Lab?</div>\n      <AbstractSelect\n        className=\"lab-selector-dropdown\"\n        options={options}\n        onChange={setLabSelected}\n      />\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          session.startSession(\n            props.labs.filter(lab => lab.lid === labSelected)[0]\n          );\n        }}\n        disabled={labSelected === null}\n      >\n        Start Session\n      </Button>\n    </div>\n  );\n}\n\nSessionSelector.propTypes = {\n  labs: PropTypes.array.isRequired\n};\n\nexport default SessionSelector;\n","import React from 'react';\n\nimport { useUser } from '../../../../hooks/userHook';\n\nimport LabSelector from './LabSelector';\n\nimport './PageSessionNew.css';\n\nfunction PageSessionNew() {\n  const user = useUser();\n\n  return (\n    <div className=\"page-session-new\">\n      <LabSelector labs={user.labs} />\n    </div>\n  );\n}\n\nexport default PageSessionNew;\n","function newDateByMilliSeconds(milliSecs) {\n  return new Date(null, null, null, null, null, null, milliSecs);\n}\n\nfunction dateToHHMMSS(date) {\n  return date.toTimeString().substr(0, 8);\n}\n\nfunction secondsToHHMMSS(milliSecs) {\n  const milliSecsDate = newDateByMilliSeconds(milliSecs);\n  const HHMMSS = dateToHHMMSS(milliSecsDate);\n  return HHMMSS;\n}\n\nexport function timeDifferenceMilliSecondsToHHMMSS(start, end) {\n  return secondsToHHMMSS(end - start);\n}\n\nexport function durationUntilNowMilliSecondsToHHMMSS(start) {\n  return timeDifferenceMilliSecondsToHHMMSS(start, Date.now());\n}\n\nexport function makeGetterWithDefault(object, defaultValue) {\n  return key => (key in object ? object[key] : defaultValue);\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport './Statistic.css';\n\nfunction Statistic(props) {\n  return (\n    <div className=\"statistic\">\n      <div className=\"statistic-title\">{props.title}</div>\n      <div className=\"statistic-value\">{props.value}</div>\n    </div>\n  );\n}\n\nStatistic.propTypes = {\n  title: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\n\nexport default Statistic;\n","import React, { useEffect, useState } from 'react';\n\nimport { durationUntilNowMilliSecondsToHHMMSS } from '../../../../../utils';\nimport { useSession } from '../../../../../hooks/sessionHook';\n\nimport Statistic from '../../../../commons/Statistic';\n\nimport './SessionDuration.css';\n\nfunction SessionDuration() {\n  const session = useSession();\n  const [timeElasped, setTimeElasped] = useState(\n    durationUntilNowMilliSecondsToHHMMSS(session.startTime)\n  );\n\n  useEffect(() => {\n    const intervalHandle = setInterval(() => {\n      setTimeElasped(durationUntilNowMilliSecondsToHHMMSS(session.startTime));\n    }, 1000);\n    return () => clearInterval(intervalHandle);\n  });\n  return <Statistic title=\"Duration\" value={timeElasped} />;\n}\n\nexport default SessionDuration;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useMemo } from 'react';\nimport Webcam from 'react-webcam';\n\nconst videoConstraints = {\n  width: 1280,\n  height: 720,\n  facingMode: 'user'\n};\n\nfunction ImageCapturer(props) {\n  const webcamRef = React.useRef(null);\n\n  useEffect(() => {\n    const intervalHandle = setInterval(() => {\n      const base64Image = webcamRef.current.getScreenshot();\n      props.onPostImage(base64Image);\n    }, 1000);\n    return () => clearInterval(intervalHandle);\n  });\n\n  return useMemo(\n    () => (\n      <Webcam\n        className=\"image-capturer\"\n        audio={false}\n        ref={webcamRef}\n        screenshotFormat=\"image/jpeg\"\n        videoConstraints={videoConstraints}\n      />\n    ),\n    []\n  );\n}\n\nImageCapturer.propTypes = {\n  onPostImage: PropTypes.func.isRequired\n};\n\nexport default ImageCapturer;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { Tag } from 'antd';\n\nimport { makeGetterWithDefault } from '../../../utils';\n\nconst statusTextMap = {\n  A: 'Present',\n  L: 'Late',\n  AB: 'Absent w/o valid reason',\n  MC: 'Absent w valid reason'\n};\n\nconst statusAbbrMap = {\n  A: 'A',\n  L: 'L',\n  AB: 'AB',\n  MC: 'MC'\n};\n\nconst colorMap = {\n  A: 'green',\n  L: 'gold',\n  AB: 'red',\n  MC: 'blue'\n};\n\nconst getStatusTextMap = makeGetterWithDefault(statusTextMap, 'No status');\n\nconst getStatusAbbrMap = makeGetterWithDefault(statusAbbrMap, 'N');\n\nconst getColorMap = makeGetterWithDefault(colorMap, 'grey');\n\nfunction AttendanceStatusTag(props) {\n  const text = props.abbreviate\n    ? getStatusAbbrMap(props.status)\n    : getStatusTextMap(props.status);\n  const color = getColorMap(props.status);\n  return <Tag color={color}>{text}</Tag>;\n}\n\nAttendanceStatusTag.propTypes = {\n  status: PropTypes.oneOf(['A', 'L', 'AB', 'MC', undefined]),\n  abbreviate: PropTypes.bool\n};\n\nexport default AttendanceStatusTag;\n","import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { List } from 'antd';\n\nimport AttendanceStatusTag from '../../../../commons/AttendanceStatusTag';\n\nconst order = {\n  A: 0,\n  L: 1,\n  AB: 2,\n  MC: 3\n};\n\nfunction AttendanceList(props) {\n  const sortedStudents = _.sortBy(props.students, [\n    student => order[student.status],\n    'name'\n  ]);\n  return (\n    <List\n      className=\"student-list\"\n      dataSource={sortedStudents}\n      renderItem={student => (\n        <List.Item className=\"student-list-item\" key={student.mid}>\n          <List.Item.Meta title={student.name} />\n          <AttendanceStatusTag abbreviate status={student.status} />\n        </List.Item>\n      )}\n    />\n  );\n}\n\nAttendanceList.propTypes = {\n  students: PropTypes.array\n};\n\nexport default AttendanceList;\n","import React, { useMemo } from 'react';\n\nimport { Button, Modal } from 'antd';\n\nimport SessionDuration from './SessionDuration';\nimport ImageCapturer from './ImageCapturer';\n\nimport { getDisplayNameFromLab } from '../../../../hooks/userHook';\nimport { useSession } from '../../../../hooks/sessionHook';\n\nimport Statistic from '../../../commons/Statistic';\n\nimport AttendanceList from './AttendanceList';\n\nimport './PageSessionOngoing.css';\n\nconst { confirm } = Modal;\n\nfunction PageSessionOngoing() {\n  const session = useSession();\n\n  return useMemo(() => {\n    const showConfirm = () => {\n      confirm({\n        title: 'Do you want to end this session?',\n        okText: 'Yes',\n        cancelText: 'No',\n        onOk: session.endSession\n      });\n    };\n    return (\n      <div className=\"page-session-ongoing\">\n        <div className=\"session-info\">\n          <div className=\"session-info-header\">\n            <Statistic\n              title=\"Lab Group\"\n              value={getDisplayNameFromLab(session.lab)}\n            />\n            <Button type=\"danger\" onClick={showConfirm}>\n              End Session\n            </Button>\n          </div>\n          <AttendanceList students={session.students} />\n        </div>\n        <div className=\"live-capture\">\n          <div className=\"live-capture-header\">\n            <div className=\"live-capture-title\">Live Capture</div>\n            <SessionDuration />\n          </div>\n          <ImageCapturer onPostImage={session.postImage} />\n        </div>\n      </div>\n    );\n  }, [session.lab, session.students, session.postImage, session.endSession]);\n}\n\nexport default PageSessionOngoing;\n","import PropTypes from 'prop-types';\nimport React, { useMemo } from 'react';\n\nimport { withRouter, Switch } from 'react-router-dom';\n\nimport { useSession } from '../../../hooks/sessionHook';\n\nimport ConditionalRedirectRoute from '../../commons/ConditionalRedirectRoute';\n\nimport PageSessionNew from './PageSessionNew';\nimport PageSessionOngoing from './PageSessionOngoing';\n\nfunction PageSession(props) {\n  const session = useSession();\n  return useMemo(\n    () => (\n      <React.Fragment>\n        <Switch>\n          <ConditionalRedirectRoute\n            path={`${props.match.path}/new`}\n            when={session.isOnGoing}\n            to={`${props.match.path}/ongoing`}\n            component={PageSessionNew}\n          />\n          <ConditionalRedirectRoute\n            path={`${props.match.path}/ongoing`}\n            when={!session.isOnGoing}\n            to={`${props.match.path}/new`}\n            component={PageSessionOngoing}\n          />\n          <ConditionalRedirectRoute\n            exect\n            path={`${props.match.path}/`}\n            when={session.isOnGoing}\n            to={`${props.match.path}/ongoing`}\n            component={PageSessionNew}\n          />\n        </Switch>\n      </React.Fragment>\n    ),\n    [session.isOnGoing, props.match.path]\n  );\n}\n\nPageSession.propTypes = {\n  match: PropTypes.shape({\n    path: PropTypes.string\n  })\n};\n\nexport default withRouter(PageSession);\n","import React from 'react';\n\nfunction PageLabs() {\n  return <div className=\"page-labs\">labs</div>;\n}\n\nexport default PageLabs;\n","import React from 'react';\nimport logo from './assets/logo.png';\n\nimport './Logo.css';\n\nfunction Logo() {\n  return (\n    <div className=\"logo\">\n      <img src={logo} alt=\"logo\" />\n    </div>\n  );\n}\n\nexport default Logo;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Form, Icon, Input, Button } from 'antd';\n\nimport { useUser } from '../../../../hooks/userHook';\n\nimport './SignInForm.css';\n\nfunction SignInForm(props) {\n  const user = useUser();\n\n  const { getFieldDecorator } = props.form;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        user.signIn(values);\n      }\n    });\n  };\n\n  return (\n    <div className=\"login-form-container\">\n      <Form onSubmit={handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message: 'Please input your username!' }]\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password!' }]\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            Log in\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n\nSignInForm.propTypes = {\n  form: PropTypes.shape({\n    validateFields: PropTypes.func.isRequired,\n    getFieldDecorator: PropTypes.func.isRequired\n  })\n};\n\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(\n  SignInForm\n);\n\nexport default WrappedNormalLoginForm;\n","import React from 'react';\n\nimport Logo from '../../commons/Logo';\n\nimport SignInForm from './SignInForm';\n\nimport './PageSignIn.css';\n\nfunction PageSignIn() {\n  return (\n    <div className=\"page-signin\">\n      <Logo />\n      <SignInForm />\n    </div>\n  );\n}\n\nexport default PageSignIn;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { withRouter, Route } from 'react-router-dom';\nimport { message } from 'antd';\n\nimport { useUser } from '../../../hooks/userHook';\nimport { useSession } from '../../../hooks/sessionHook';\n\nimport ConditionalRedirectRoute from '../../commons/ConditionalRedirectRoute';\nimport PageSession from '../../pages/PageSession';\nimport PageLabs from '../../pages/PageLabs';\nimport PageSignIn from '../../pages/PageSignIn';\n\nfunction Content(props) {\n  const user = useUser();\n  const session = useSession();\n\n  const [prevPathname, setPrevPathname] = useState(null);\n\n  useEffect(() => {\n    const currentPathname = props.location.pathname;\n    const handlePathnameChange = (prev, cur) => {\n      // from /session/ongoing to anywhere else, and session is going on\n      if (prev === '/session/ongoing' && session.isOnGoing) {\n        message.destroy();\n        message.warning(\n          'Recording paused. \\n Go back to session page to resume'\n        );\n      }\n      // from anywhere else to /session ,  and session is going on\n      if (\n        cur.startsWith('/session') &&\n        prev !== null &&\n        !prev.startsWith('/session') &&\n        session.isOnGoing\n      ) {\n        message.destroy();\n        message.success('Recording resumed.');\n      }\n    };\n    if (prevPathname !== currentPathname) {\n      handlePathnameChange(prevPathname, currentPathname);\n      setPrevPathname(currentPathname);\n    }\n  }, [props.location.pathname, prevPathname, session.isOnGoing]);\n\n  const renderContent = () => (\n    <React.Fragment>\n      <Route path=\"/session\" component={PageSession} />\n      <Route path=\"/labs\" component={PageLabs} />\n      <Route exact path=\"/\" component={PageSession} />\n    </React.Fragment>\n  );\n  return useMemo(\n    () => (\n      <div className=\"content\">\n        <ConditionalRedirectRoute\n          exact\n          path=\"/signin\"\n          when={user.isSignedIn}\n          to=\"/session\"\n          component={PageSignIn}\n        />\n        <ConditionalRedirectRoute\n          path=\"/\"\n          when={!user.isSignedIn}\n          to=\"/signin\"\n          component={renderContent}\n        />\n      </div>\n    ),\n    [user.isSignedIn]\n  );\n}\n\nContent.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string\n  })\n};\n\nexport default withRouter(Content);\n","import React from 'react';\nimport { Layout } from 'antd';\n\nimport Header from './Header';\nimport Content from './Content';\n\nimport './MainView.css';\n\nconst { Header: LayoutHeader, Content: LayoutContent } = Layout;\n\nfunction MainView() {\n  return (\n    <Layout className=\"ant-layout\">\n      <LayoutHeader className=\"ant-layout-header\">\n        <Header />\n      </LayoutHeader>\n      <LayoutContent className=\"ant-layout-content\">\n        <Content />\n      </LayoutContent>\n    </Layout>\n  );\n}\n\nexport default MainView;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'antd/dist/antd.css';\n\nimport './App.css';\n\nimport { ProvideUser } from '../../hooks/userHook';\nimport { ProvideSession } from '../../hooks/sessionHook';\n\nimport MainView from '../MainView';\n\nfunction App() {\n  return (\n    <ProvideUser>\n      <ProvideSession>\n        <Router>\n          <div className=\"App\">\n            <MainView />\n          </div>\n        </Router>\n      </ProvideSession>\n    </ProvideUser>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}